Клиент — программа, с которой работает пользователь. Работает в браузере или desktop-приложение. Не требует много памяти, места и других ресурсов системы. 

Сервер — компьютер, на котором хранится само приложение. На нем находится вся логика поведения приложения, весь код и все дополнительные материалы. Сервера стоят дорого, но это обусловлено специализированным, и как следствие, более дорогим оборудованием.

База данных — хранилище данных. В ней легко искать информацию, а также, благодаря специализированому оборудованию , можно быть уверенным, что даже в случаем сбоя информация в базе данных будет сохранена. Это критически важный момент для финансовых/бизнес приложений.

Клиент-серверная архитектура работает следующим образом:
Пользователь работает только с клиентом, он (как пример) вводит туда поисковые дынные и отправляет (жмет кнопку отправить, как пример) запрос. Запрос уходит на сервер, который в свою очередь ищет данные, необходимые пользователю,  в базе данных. Найдя эти данные он отправляет их обратно в клиент (приложение).

Естественно, если рассматривать более сложные клиенты (пример приложения по поиску и покупке недвижимости) нагрузка на сервер может быть гораздо выше (десятки тысяч запросов одновременно), т.е нелбходимо наличие нескольких серверов. 

Также для ускорения и увеличения надежности работы приложения, существует балансировщик. Он выбирает самый незагруженный сервер и отправляет запрос именно туда. 
Т.е чем нагруженнее приложение, тем больше серверов, балансировщиков и баз данных ему необходимо. Также дополнительные базы данных могут скопировать информацию друг с друга, что исключает потерю данных, а это критически важно опять же в финансовых/бизнес приложениях.
Работа тестировщика здесь заключается прежде всего в тестировании клиента, но если есть доступ к серверу и базе данных, их тоже необходимо протестировать. Также необходимо проверить уязвимость информации, на пути от клиента к серверу или от сервера к базе данных.
